wait, nofity, atomics
notify, wait + атомики
parallel streams
многопоточность, избегание блокировок
реализация singleton
средства многопоточности в java
для чего нужен volatile
как получать доступ к общей памяти
опыт работы с многопоточностью
5 процессов по 10 потоков vs 10 процессов по 5 потоков
разница между потоком и процессом
зачем нужен тредпул
volatile
средства для многопоточного программирования
взаимные исключения и разделяемая память
разница между потоком и процессом
процессы могут иметь доступ в память друг друга
механизмы синхронизации
многопоточка
совместный доступ к переменной счетчика
многопоточка
с многопоточностью проще работать в процедурной или в функциональной парадигме
исправить код, добавить блокировку и транзакции
многопоточка
многопоточка, кодинг
atomics и их особенности
будет ли обработка числе 1..100 быстрее, если использовать parrallelstream
опыт многопоточности
что выведет многопоточный код
способы выполнить код в отдельном потоке
реализации executor service
future, completablefuture
synchronized
требования к объекту-монитору
если synchronized перед static method
volatile
когда операция = не будет атомарной
какие еще операции подчиняются happen-before
atomics, как они работают
контейнеры для многопоточной среды, как они работают
рекомендации для работы в многопоточной среде
способы выполнения в отдельном потоке
synchronized
требования к монитору
synchronized перед method, перед static method
happens before
volatile
atomic operations
atomics, как работают
многопоточные коллекции, как работают
parallel stream
как на нативной java реализовать singleton
volatile
сложность с атомарностью и double
как поймать exception из другого потока
атомарность операций
избегание deadlocks
приходилось ли с многопоточкой
java memory model, happen before
что такое race condition
как решить конфликт записи в общий ресурс
completablefuture
на каком пуле по умолчанию запускается completablefuture
в чем особенность fork join pool
были ли многопоточные задачи
completableFuture и его методы
на каком треде completableFuture
зачем нужен threadpool
parallel streams
concurrentHashMap, как работает и синхронизируется
какие способы создания потоков знаете
как запустить несколько потоков и дождаться завершения их всех
volatile
многопоточный singleton (double-check-locking-pattern)
java concurrency
hashmap vs concurrenthashmap
completablefuture
многопоточка, проблемы
race condition, способы решения в java
future vs completablefuture
выполнение долгих задач, synchronized
многопоточка
spring потокобезопасен?
scope prototype - потокобезопасен?
